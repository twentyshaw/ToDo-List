{"version":3,"sources":["components/input.js","components/items.js","leanCloud.js","user.js","App.js","serviceWorker.js","index.js"],"names":["Input","type","value","this","props","content","onChange","changeCont","bind","onKeyPress","submit","e","key","submitOn","React","Component","Item","checked","ToDo","status","toggle","title","className","onClick","delete","console","log","onToggle","onDelete","AV","init","appId","appKey","getUserCurrent","user","User","current","getUserFromAVUSer","AVUser","id","attributes","userDialog","state","slected","formData","username","password","signUpForm","onSubmit","signUp","placeholder","changeFormData","signInForm","signIn","switch","preventDefault","successFn","errorFn","setUsername","setPassword","then","loginedUser","error","onSignup","code","alert","logIn","onSignIn","stateCopy","JSON","parse","stringify","target","setState","App","newTodo","index","toDoLists","deleted","todos","filter","item","map","todo","signOut","add","onSignupOrSignIn","push","idMaker","number","logOut","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.609d3367.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Input extends React.Component{\r\n    render(){\r\n        return(\r\n            <input type=\"text\" \r\n            value={this.props.content}\r\n            onChange={this.changeCont.bind(this)} \r\n            onKeyPress={this.submit.bind(this)}/>\r\n        )\r\n    }\r\n\r\n    changeCont(e){\r\n        this.props.onChange(e)\r\n    }\r\n\r\n    submit(e){\r\n        if (e.key === 'Enter') {\r\n            this.props.submitOn(e)        \r\n        }\r\n    }\r\n}\r\n\r\nexport default Input","import React from 'react';\r\n\r\nclass Item extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <input type=\"checkbox\" \r\n                checked={this.props.ToDo.status === 'completed'}\r\n                onChange={this.toggle.bind(this)}/>\r\n                <h3>{this.props.ToDo.title}</h3>\r\n                <p className={\"content \"+this.props.ToDo.status}>{this.props.ToDo.content}</p>\r\n                <button className=\"btn delete\" onClick={this.delete.bind(this)}><i className=\"iconfont icon-delete\"></i></button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    toggle(e){\r\n        console.log(this.props.ToDo.status)\r\n        this.props.onToggle(e,this.props.ToDo)\r\n    }\r\n\r\n    delete(e){\r\n        this.props.onDelete(e,this.props.ToDo)\r\n    }\r\n}\r\nexport default Item","import AV from 'leancloud-storage'\r\n\r\nvar APP_ID = 'DLnGYV5wDEmLJUbvwBnXWQIP-gzGzoHsz';\r\nvar APP_KEY = 'S753khDqda46cJQUwvHSKtbG';\r\n\r\nAV.init({\r\n  appId: APP_ID,\r\n  appKey: APP_KEY\r\n});\r\n\r\nexport default AV\r\n\r\nexport function signUp(username,password,successFn,errorFn){\r\n  var user = new AV.User()\r\n\r\n  user.setUsername(username);\r\n  user.setPassword(password);\r\n\r\n  user.signUp().then(function(loginedUser){\r\n    let user = getUserFromAVUSer(loginedUser)\r\n    successFn(user)\r\n  },(function(error){\r\n    errorFn(error)\r\n  }))\r\n}\r\n\r\nexport function signIn(username,password,successFn,errorFn){\r\n  AV.User.logIn(username, password).then(function (loginedUser) {\r\n    let user = getUserFromAVUSer(loginedUser)\r\n    successFn(user)\r\n  }, function (error) {\r\n    errorFn(error)\r\n  })\r\n}\r\n\r\nexport function getUserCurrent(){\r\n  let user = AV.User.current()\r\n  if(user){\r\n    return getUserFromAVUSer(user)\r\n  }else{\r\n    return null\r\n  }\r\n} \r\n\r\nexport function signOut(){\r\n  AV.User.logOut()\r\n}\r\n\r\n\r\nfunction getUserFromAVUSer(AVUser){\r\n  return({\r\n    id:AVUser.id,\r\n    ...AVUser.attributes\r\n  })\r\n}\r\n\r\n","import React from 'react'\r\nimport { signUp, signIn } from './leanCloud'\r\n\r\n\r\nclass userDialog extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            slected: 'signUp',\r\n            formData: {\r\n                username: '',\r\n                password: ''\r\n            }\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        let signUpForm = (\r\n            <form className=\"signup\" onSubmit={this.signUp.bind(this)}>\r\n                <div className=\"row\">\r\n                    <label>用户名</label>\r\n                    <input type=\"text\" placeholder=\"请设定用户名\"\r\n                           value={this.state.formData.username}\r\n                           onChange={this.changeFormData.bind(this,'username')}/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>密码</label>\r\n                    <input type=\"password\" placeholder=\"请设定密码\"\r\n                           value={this.state.formData.password}\r\n                           onChange={this.changeFormData.bind(this,'password')}/>\r\n                </div>\r\n                <div className=\"row action\">\r\n                    <button type=\"submit\">注册</button>\r\n                </div>\r\n            </form>\r\n        )\r\n\r\n        let signInForm = (\r\n            <form className=\"signin\" onSubmit={this.signIn.bind(this)}>\r\n                <div className=\"row\">\r\n                    <label>用户名</label>\r\n                    <input type=\"text\" placeholder=\"请输入您的用户名\"\r\n                           value={this.state.formData.username}\r\n                           onChange={this.changeFormData.bind(this,'username')}/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>密码</label>\r\n                    <input type=\"password\" placeholder=\"请输入您的密码\"\r\n                           value={this.state.formData.password}\r\n                           onChange={this.changeFormData.bind(this,'password')}/>\r\n                </div>\r\n                <div className=\"row action\">\r\n                    <button type=\"submit\">登陆</button>\r\n                </div>\r\n            </form>\r\n        )\r\n\r\n        return(\r\n            <div className=\"userDialog-wrapper\">\r\n                <div className=\"userDialog\">\r\n                    <nav onChange={this.switch.bind(this)}>\r\n                        <label>\r\n                            <input type=\"radio\" value=\"signUp\" \r\n                                   checked={this.state.slected === \"signUp\"} \r\n                                   onChange={this.switch.bind(this)}/>注册\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"radio\" value=\"signIn\" \r\n                                   checked={this.state.slected === \"signIn\"}\r\n                                   onChange={this.switch.bind(this)}/>登陆\r\n                        </label>\r\n                    </nav>\r\n                    <div className=\"userDialog-content\">\r\n                        {this.state.slected === \"signUp\"? signUpForm : null}\r\n                        {this.state.slected === \"signIn\"? signInForm : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    signUp(e){\r\n        e.preventDefault()\r\n        let {username, password} = this.state.formData\r\n        let success = (user) => {\r\n            this.props.onSignup(user)\r\n        }\r\n        let error = (error) => {\r\n            console.log(error.code)\r\n            switch(error.code){\r\n                case 202:\r\n                    alert(\"用户名已被占用\")\r\n                    break\r\n                default:\r\n                    alert(error)\r\n                    break\r\n            }\r\n        }\r\n        \r\n        signUp(username,password,success,error)\r\n    }\r\n\r\n    signIn(e){\r\n        e.preventDefault(e)\r\n        let {username,password} = this.state.formData\r\n        let success = (user) => {\r\n            this.props.onSignIn(user)\r\n        }\r\n        let error = (error) => {\r\n            switch(error.code){\r\n                case 210:\r\n                    alert(\"用户名或密码错误\")\r\n                    break\r\n                default:\r\n                    alert(error)\r\n                    break\r\n            }\r\n        }\r\n\r\n        signIn(username,password,success,error)\r\n    }\r\n\r\n    changeFormData(key,e){\r\n        let stateCopy = JSON.parse(JSON.stringify(this.state))\r\n        stateCopy.formData[key] = e.target.value\r\n        this.setState(stateCopy)\r\n    }\r\n\r\n    switch(e){\r\n        this.setState({\r\n            slected: e.target.value\r\n        })\r\n    }\r\n}\r\n\r\nexport default userDialog","import React from 'react';\nimport 'normalize.css';\nimport './App.css';\nimport Input from './components/input';\nimport Item from './components/items';\nimport UserDialog from './user'\nimport { getUserCurrent, signOut } from './leanCloud'\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      newTodo: '',\n      user:getUserCurrent() || {},\n      index: 0,\n      toDoLists: [\n        {id:this.index, \n         title:'GOAL',\n         content:'等待添加',\n         status:null,\n         deleted: false}\n      ]\n    }\n  }\n\n  render(){\n    let todos = this.state.toDoLists.filter(item => item.deleted !== true).map(todo=>{\n      return (\n      <li className={this.state.toDoLists.id}>\n          <Item ToDo={todo}\n                onToggle={this.toggle.bind(this)}\n                onDelete={this.delete.bind(this)}/>\n      </li>\n      )\n    })\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <span className=\"ttl\">ToDo<i className=\"iconfont icon-todo\"></i></span>\n          <h1>Welcome! { this.state.user.username || \"\"}</h1>\n          {this.state.user.id? <button onClick={this.signOut.bind(this)}>注销登陆</button>: null} \n        </header>\n        <div className=\"top\">\n          <h2>今日目标</h2>\n          <div className=\"input\">\n            <Input \n            content={this.state.newTodo}\n            onChange={this.changeCont.bind(this)} \n            submitOn={this.add.bind(this)}/>\n            <button className=\"btn add\"><i className=\"iconfont icon-zhuijia\"></i></button>\n          </div>\n        </div>\n        <div className=\"items\">\n          <ol>{todos}</ol>\n        </div>\n        {this.state.user.id?\n          null:\n          <UserDialog onSignup={this.onSignupOrSignIn.bind(this)}\n                      onSignIn={this.onSignupOrSignIn.bind(this)}/>}\n      </div>\n    )\n  }\n\n  componentDidUpdate(){\n  }\n\n  onSignupOrSignIn(user){\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = user\n    this.setState(stateCopy)\n  }\n\n  changeCont(e){\n    this.setState({\n      newTodo: e.target.value\n    })\n  }\n\n  add(e){\n      if(this.state.index>0){\n        this.state.toDoLists.push({\n          id: this.idMaker(),\n          title: \"GOAL\",\n          content: e.target.value,\n          status:null,\n          deleted: false\n        })\n        this.setState({\n          newTodo: '',\n          toDoLists: this.state.toDoLists\n        })\n      }else{\n        this.setState({\n          newTodo: '',\n          toDoLists: [\n            {id: 1, \n            title:\"GOAL\",\n            content:e.target.value,\n            status:null,\n            deleted: false}]\n        })\n        this.idMaker()\n      }\n  }\n\n  idMaker(){\n      let number = this.state.index + 1\n      this.setState({\n        index: number\n      })\n      return number\n  }\n\n  toggle(e,todo){\n    console.log(todo.status)\n    todo.status = todo.status === 'completed' ? '' : 'completed'\n    this.setState(this.state) \n    console.log(todo.status)\n  }\n\n  delete(e,todo){\n    todo.deleted = true\n    this.setState({\n      deleted:true\n    })\n  }\n\n  signOut(){\n    signOut()\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = {}\n    this.setState(stateCopy)\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}