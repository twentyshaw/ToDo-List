{"version":3,"sources":["components/input.js","components/items.js","leanCloud.js","components/signInForm.js","components/signUpForm.js","components/signUpAndSignIn.js","components/forgetPassword.js","user.js","App.js","serviceWorker.js","index.js"],"names":["Input","type","value","this","props","content","onChange","changeCont","bind","onKeyPress","submit","e","key","target","trim","submitOn","alert","React","Component","Item","checked","ToDo","status","toggle","title","className","onClick","delete","console","log","onToggle","onDelete","AV","init","appId","appKey","TodoModel","getByUser","user","successFn","errorFn","query","Query","equalTo","find","then","response","array","map","t","id","attributes","call","error","create","deleted","todo","Object","extend","set","acl","ACL","setPublicReadAccess","setReadAccess","User","current","setWriteAccess","setACL","save","update","createWithoutData","undefined","destroy","todoid","getUserCurrent","getUserFromAVUSer","AVUser","SignInForm","onSubmit","signIn","placeholder","formData","username","changeFormData","required","password","href","forgetPass","preventDefault","logIn","loginedUser","onSignIn","code","SignUpForm","signUp","email","setUsername","setPassword","setEmail","onSignUp","SignUpAndSignIn","selected","switch","ForgetPassword","resetPass","backtoSignIn","requestPasswordReset","success","sendPasswordResetEmail","userDialog","state","selectedTab","stateCopy","JSON","parse","stringify","setState","App","newTodo","index","toDoLists","todos","filter","item","onSignupOrSignIn","signOut","add","window","location","reload","newTodoItem","push","firstTodo","indexMaker","number","oldStatus","logOut","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f39fda00.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Input extends React.Component{\r\n    render(){\r\n        return(\r\n            <input type=\"text\" \r\n            value={this.props.content}\r\n            onChange={this.changeCont.bind(this)} \r\n            onKeyPress={this.submit.bind(this)}/>\r\n        )\r\n    }\r\n\r\n    changeCont(e){\r\n        this.props.onChange(e)\r\n    }\r\n\r\n    submit(e){\r\n        if (e.key === 'Enter') {\r\n            if (e.target.value.trim() !== \"\") {\r\n                this.props.submitOn(e)                  \r\n            }else{\r\n                alert(\"你还没有输入任何内容！\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Input","import React from 'react';\r\n\r\nclass Item extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <input type=\"checkbox\" \r\n                checked={this.props.ToDo.status === 'completed'}\r\n                onChange={this.toggle.bind(this)}/>\r\n                <h3>{this.props.ToDo.title}</h3>\r\n                <p className={\"content \"+this.props.ToDo.status}>{this.props.ToDo.content}</p>\r\n                <button className=\"btn delete\" onClick={this.delete.bind(this)}><i className=\"iconfont icon-delete\"></i></button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    toggle(e){\r\n        console.log(this.props.ToDo.status)\r\n        this.props.onToggle(e,this.props.ToDo)\r\n    }\r\n\r\n    delete(e){\r\n        this.props.onDelete(e,this.props.ToDo)\r\n    }\r\n}\r\nexport default Item","import AV from 'leancloud-storage'\r\nimport { updateExpression } from '@babel/types';\r\n\r\nvar APP_ID = 'DLnGYV5wDEmLJUbvwBnXWQIP-gzGzoHsz';\r\nvar APP_KEY = 'S753khDqda46cJQUwvHSKtbG';\r\n\r\nAV.init({\r\n  appId: APP_ID,\r\n  appKey: APP_KEY\r\n});\r\n\r\nexport default AV\r\n\r\nexport const TodoModel = {\r\n  getByUser(user, successFn, errorFn){\r\n    let query = new AV.Query('Todo')\r\n    query.equalTo('deleted', false)\r\n    query.find().then((response) => {\r\n      let array = response.map((t) => {\r\n        console.log(t)\r\n        return {id: t.id, ...t.attributes}\r\n      })\r\n      successFn.call(null, array)\r\n    }, (error) => {\r\n      errorFn.call(null, error)\r\n    })\r\n  },\r\n\r\n  create({title, content, status, deleted},successFn, errorFn){\r\n    var Todo = AV.Object.extend('Todo')\r\n    var todo = new Todo()\r\n    todo.set('title', title)\r\n    todo.set('content', content)\r\n    todo.set('status', status)\r\n    todo.set('deleted', deleted)\r\n    let acl = new AV.ACL()\r\n    acl.setPublicReadAccess(false)\r\n    acl.setReadAccess(AV.User.current(),true)\r\n    acl.setWriteAccess(AV.User.current(),true)\r\n    todo.setACL(acl)\r\n    todo.save().then(function (response) {\r\n      console.log('保存成功。objectId：' + todo.id)\r\n      successFn.call(null,response.id)\r\n      }, function (error) {\r\n        errorFn.call(null,error)\r\n    })\r\n  },\r\n\r\n  update({id,title,content,status,deleted},successFn,errorFn){\r\n    let todo = AV.Object.createWithoutData('Todo',id)\r\n    title !== undefined && todo.set('title', title)\r\n    content !== undefined && todo.set('content', content)\r\n    status !== undefined && todo.set('status', status)\r\n    deleted !== undefined && todo.set('deleted', deleted)\r\n    todo.save().then((response)=>{\r\n      successFn && successFn.call(null) //如果成功函数存在 才执行 前面的语句是判断\r\n    }, (error)=>{\r\n      errorFn && errorFn.call(null,error)\r\n    })\r\n  },\r\n\r\n  destroy(todoid,successFn,errorFn){\r\n    this.update({id:todoid, deleted:true},successFn,errorFn)\r\n  }\r\n\r\n}\r\n\r\n\r\nexport function signUp(email,username,password,successFn,errorFn){\r\n  var user = new AV.User()\r\n\r\n  user.setUsername(username);\r\n  user.setPassword(password);\r\n  user.setEmail(email);\r\n  user.signUp().then(function(loginedUser){\r\n    let user = getUserFromAVUSer(loginedUser)\r\n    successFn(user)\r\n  },(function(error){\r\n    errorFn(error)\r\n  }))\r\n}\r\n\r\nexport function signIn(username,password,successFn,errorFn){\r\n  AV.User.logIn(username, password).then(function (loginedUser) {\r\n    let user = getUserFromAVUSer(loginedUser)\r\n    successFn(user)\r\n  }, function (error) {\r\n    errorFn(error)\r\n  })\r\n}\r\n\r\nexport function getUserCurrent(){\r\n  let user = AV.User.current()\r\n  if(user){\r\n    return getUserFromAVUSer(user)\r\n  }else{\r\n    return null\r\n  }\r\n} \r\n\r\nexport function signOut(){\r\n  AV.User.logOut()\r\n}\r\n\r\nexport function sendPasswordResetEmail(email,successFn,errorFn){\r\n  AV.User.requestPasswordReset(email).then(function (success) {\r\n    successFn() \r\n  }, function (error) {\r\n    errorFn(error)\r\n  })\r\n}\r\n\r\nfunction getUserFromAVUSer(AVUser){\r\n  return({\r\n    id:AVUser.id,\r\n    ...AVUser.attributes\r\n  })\r\n}\r\n","import React from 'react';\r\nimport { signIn } from '../leanCloud'\r\n\r\nexport default class SignInForm extends React.Component{\r\n    render(){\r\n        return(\r\n            <form className=\"signin\" onSubmit={this.signIn.bind(this)}>\r\n                <div className=\"row\">\r\n                    <label><i className=\"iconfont icon-user\"></i></label>\r\n                    <input className=\"input-username\"\r\n                           type=\"text\" placeholder=\"请输入您的用户名\"\r\n                           value={this.props.formData.username}\r\n                           onChange={this.props.changeFormData.bind(null,'username')} required/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label><i className=\"iconfont icon-pswd\"></i></label>\r\n                    <input className=\"input-password\"\r\n                           type=\"password\" placeholder=\"请输入您的密码\"\r\n                           value={this.props.formData.password}\r\n                           onChange={this.props.changeFormData.bind(null,'password')} required/>\r\n                </div>\r\n                <div className=\"action\">\r\n                    <button type=\"submit\">登陆</button>\r\n                </div>\r\n                <div className=\"forget\">\r\n                    <a href=\"#\" onClick={this.props.forgetPass}>忘记密码?</a> {/*为什么这里可以直接调用forgetPass，不用bind*/}\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    signIn(e){\r\n        e.preventDefault(e)\r\n        let {username,password} = this.props.formData\r\n        let success = (user) => {\r\n            this.props.onSignIn(user)\r\n        }\r\n        let error = (error) => {\r\n            console.log(error)\r\n            switch(error.code){\r\n                case 210:\r\n                    alert(\"用户名或密码错误\")\r\n                    break\r\n                case 211:\r\n                    alert(\"用户不存在\")\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n\r\n        signIn(username,password,success,error)\r\n    }\r\n}","import React from 'react';\r\nimport { signUp } from '../leanCloud'\r\n\r\nexport default class SignUpForm extends React.Component{\r\n    render(){\r\n        return(\r\n            <form className=\"signup\" onSubmit={this.signUp.bind(this)}>\r\n                <div className=\"row\">\r\n                    <label><i className=\"iconfont icon-user\"></i></label>\r\n                    <input className=\"input-username\" \r\n                           type=\"text\" placeholder=\"请设定用户名\"\r\n                           value={this.props.formData.username}\r\n                           onChange={this.props.changeFormData.bind(null,'username')} required/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label><i className=\"iconfont icon-mail\"></i></label>\r\n                    <input className=\"input-mail\"\r\n                           type=\"text\" placeholder=\"请输入您的电子邮件地址\"\r\n                           value={this.props.formData.email}\r\n                           onChange={this.props.changeFormData.bind(null,'email')} required/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label><i className=\"iconfont icon-pswd\"></i></label>\r\n                    <input className=\"input-password\"\r\n                           type=\"password\" placeholder=\"请设定密码\"\r\n                           value={this.props.formData.password}\r\n                           onChange={this.props.changeFormData.bind(null,'password')} required/>\r\n                </div>\r\n                <div className=\"action\">\r\n                    <button type=\"submit\">注册</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    signUp(e){\r\n        e.preventDefault()\r\n        let {email,username, password} = this.props.formData\r\n        let success = (user) => {\r\n            this.props.onSignUp(user)\r\n        }\r\n        let error = (error) => {\r\n            console.log(error.code)\r\n            switch(error.code){\r\n                case 202:\r\n                    alert(\"用户名已被占用\")\r\n                    break\r\n                default:\r\n                    alert(error)\r\n                    break\r\n            }\r\n        }\r\n        \r\n        signUp(email,username,password,success,error)\r\n    }\r\n}","import React from 'react'\r\nimport SignInForm from './signInForm'\r\nimport SignUpForm from './signUpForm'\r\n\r\nexport default class SignUpAndSignIn extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"signUpAndSignIn\">\r\n                <nav>\r\n                    <h1>ToDo<i className=\"iconfont icon-todo\"></i></h1>\r\n                    <div className=\"nav-inner\">\r\n                        <label>\r\n                            <input type=\"radio\" value=\"signUp\" \r\n                                checked={this.props.selected === \"signUp\"} \r\n                                onChange={this.props.switch}/>\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"radio\" value=\"signIn\" \r\n                                checked={this.props.selected === \"signIn\"}\r\n                                onChange={this.props.switch}/>\r\n                        </label>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"userDialog-content\">\r\n                    {this.props.selected === \"signUp\"? \r\n                     <SignUpForm formData={this.props.formData}\r\n                      onSignUp={this.props.onSignUp}\r\n                      changeFormData={this.props.changeFormData}/>\r\n                     : null}\r\n                    {this.props.selected === \"signIn\"? \r\n                     <SignInForm formData={this.props.formData}\r\n                      onSignIn={this.props.onSignIn}\r\n                      changeFormData={this.props.changeFormData}\r\n                      forgetPass={this.props.forgetPass}/>    \r\n                     : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { sendPasswordResetEmail } from '../leanCloud'\r\n\r\nexport default class ForgetPassword extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"forgetPassword\">\r\n                <nav>\r\n                    <h1>ToDo<i className=\"iconfont icon-todo\"></i></h1>\r\n                </nav>\r\n                <div className=\"userDialog-content\">\r\n                    <form className=\"forgetOff\" onSubmit={this.resetPass.bind(this)}>\r\n                        <div className=\"row\">\r\n                            <label><i className=\"iconfont icon-mail\"></i></label>\r\n                            <input className=\"input-mail\"\r\n                                type=\"text\" placeholder=\"请输入您的电子邮件地址\"\r\n                                value={this.props.formData.email}\r\n                                onChange={this.props.changeFormData.bind(null,'email')} required/>\r\n                        </div>\r\n                        <div className=\"action\">\r\n                            <button type=\"submit\">获取重置密码地址</button>\r\n                            <div className=\"forget\">\r\n                                <a href=\"#\" onClick={this.props.backtoSignIn}>返回登陆</a>\r\n                            </div>\r\n                        </div> \r\n                    </form>               \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    resetPass(e){\r\n        e.preventDefault()\r\n        let successFn = function(){\r\n            alert(\"发送成功！请检查您的邮箱获取重置密码地址\")\r\n        }\r\n        let errorFn = (error) => {\r\n            alert(\"发送失败，原因：\" + error)\r\n        }\r\n        sendPasswordResetEmail(this.props.formData.email, successFn, errorFn)\r\n    }\r\n}","import React from 'react'\r\nimport SignUpAndSignIn from './components/signUpAndSignIn'\r\nimport ForgetPassword from './components/forgetPassword'\r\n\r\nclass userDialog extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            selected: 'signIn',\r\n            selectedTab: 'signUpAndSignIn',\r\n            formData: {\r\n                username: '',\r\n                password: '',\r\n                email:''\r\n            }\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"userDialog-wrapper\">\r\n                <div className=\"userDialog\">\r\n                    {this.state.selectedTab === 'signUpAndSignIn'?\r\n                    <SignUpAndSignIn selected={this.state.selected}\r\n                     switch={this.switch.bind(this)}\r\n                     formData={this.state.formData}\r\n                     onSignIn={this.props.onSignIn}\r\n                     onSignUp={this.props.onSignUp}\r\n                     changeFormData={this.changeFormData.bind(this)}\r\n                     forgetPass={this.forgetPass.bind(this)}/>:\r\n                    <ForgetPassword formData={this.state.formData}\r\n                     changeFormData={this.changeFormData.bind(this)}\r\n                     backtoSignIn={this.backtoSignIn.bind(this)}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    forgetPass(){\r\n        let stateCopy = JSON.parse(JSON.stringify(this.state))\r\n        stateCopy.selectedTab = 'forgetPassword'\r\n        this.setState(stateCopy)\r\n    }\r\n\r\n    backtoSignIn(){\r\n        let stateCopy = JSON.parse(JSON.stringify(this.state))\r\n        stateCopy.selectedTab = 'signUpAndSignIn'\r\n        this.setState(stateCopy)\r\n    }\r\n\r\n    changeFormData(key,e){\r\n        let stateCopy = JSON.parse(JSON.stringify(this.state))\r\n        stateCopy.formData[key] = e.target.value\r\n        this.setState(stateCopy)\r\n    }\r\n\r\n    switch(e){\r\n        this.setState({\r\n            selected: e.target.value\r\n        })\r\n    }\r\n}\r\n\r\nexport default userDialog","import React from 'react';\nimport 'normalize.css';\nimport './App.css';\nimport Input from './components/input';\nimport Item from './components/items';\nimport UserDialog from './user'\nimport { getUserCurrent, signOut, TodoModel } from './leanCloud'\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      newTodo: '',\n      user:getUserCurrent() || {},\n      index: 0,\n      toDoLists: [\n        {id:null, \n         title:'GOAL',\n         content:'来添加你的第一条待办吧！',\n         status:'',\n         deleted: false}\n      ]\n    }\n    let user = getUserCurrent()\n    if (user) {\n      TodoModel.getByUser(user, (todos) => {\n        let stateCopy = JSON.parse(JSON.stringify(this.state))\n        stateCopy.toDoLists = todos\n        this.setState(stateCopy)\n      })\n    }\n  }\n\n  render(){\n    let todos = this.state.toDoLists.filter(item => item.deleted !== true).map(todo=>{\n      return (\n      <li className={this.state.toDoLists.id}>\n          <Item ToDo={todo}\n                onToggle={this.toggle.bind(this)}\n                onDelete={this.delete.bind(this)}/>\n      </li>\n      )\n    })\n    return (\n      <div className=\"App\">\n        {this.state.user.id?\n          null:\n          <UserDialog onSignUp={this.onSignupOrSignIn.bind(this)}\n                      onSignIn={this.onSignupOrSignIn.bind(this)}/>}\n        <header className=\"App-header\">\n          <div className=\"ttl\">ToDo<i className=\"iconfont icon-todo\"></i></div>\n          <div className=\"user-bar\">\n            <h1>Welcome! { this.state.user.username || \"\"}</h1>\n            {this.state.user.id? \n            <button onClick={this.signOut.bind(this)}>\n              <i className=\"iconfont icon-sign_out\"></i>\n              <span className=\"hide\">注销登陆</span>\n            </button>:null}\n          </div> \n        </header>\n        <div className=\"top\">\n          <h2>今日目标</h2>\n          <div className=\"input\">\n            <Input \n            content={this.state.newTodo}\n            onChange={this.changeCont.bind(this)} \n            submitOn={this.add.bind(this)}/>\n            <span className=\"add\"><i className=\"iconfont icon-enter1\"></i></span>\n          </div>\n        </div>\n        <div className=\"items\">\n          <ol>{todos}</ol>\n        </div>\n      </div>\n    )\n  }\n\n  componentDidUpdate(){\n  }\n\n  onSignupOrSignIn(user){\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = user\n    this.setState(stateCopy)\n    window.location.reload(true); \n  }\n\n  changeCont(e){\n    this.setState({\n      newTodo: e.target.value\n    })\n  }\n\n  add(e){\n      if(this.state.index>0){\n        let newTodoItem = {\n          id: null,\n          title: \"GOAL\",\n          content: e.target.value,\n          status:'',\n          deleted: false\n        }\n        TodoModel.create(newTodoItem,(id)=>{\n          newTodoItem.id = id\n          this.state.toDoLists.push(newTodoItem)\n          this.setState({\n            newTodo:'',\n            toDoLists: this.state.toDoLists\n          })\n        }, (error)=>{\n          console.log(error)\n        })\n      }else{\n        let firstTodo = {\n          id:null, \n          title:'GOAL',\n          content:e.target.value,\n          status:'',\n          deleted: false\n        }\n        TodoModel.create(firstTodo,(id)=>{\n          firstTodo.id = id\n          this.setState({\n            newTodo:'',\n            toDoLists: [{...firstTodo}]\n          })\n        }, (error)=>{\n          console.log(error)\n        })\n      }\n      this.indexMaker()\n  }\n\n  indexMaker(){\n      let number = this.state.index + 1\n      this.setState({\n        index: number\n      })\n      return number\n  }\n\n  toggle(e,todo){\n    let oldStatus = todo.status\n    todo.status = todo.status === 'completed' ? '' : 'completed'\n    TodoModel.update(todo,()=>{\n      this.setState(this.state)\n    }, (error)=>{\n      todo.status = oldStatus\n      this.setState(this.state)\n      console.log(error)\n    })\n  }\n\n  delete(e,todo){\n    TodoModel.destroy(todo.id, ()=>{\n      todo.deleted = true\n      this.setState(this.state)\n    })\n  }\n\n  signOut(){\n    signOut()\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = {}\n    this.setState(stateCopy)\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}